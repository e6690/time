{"version":3,"sources":["components/TimerForm.js","helpers.js","components/Timer.js","components/Container.js","components/ListContainer.js","components/Button.js","components/ActionContainer.js","components/Box.js","App.js","serviceWorker.js","index.js"],"names":["TimerForm","state","title","props","project","handleTitleChange","e","setState","target","value","handleProjectChange","handleClick","id","onFormSubmit","submitText","this","className","type","placeholder","onChange","onClick","onCloseForm","Component","window","helpers","millisecondsToHuman","ms","seconds","Math","floor","minutes","pad","toString","join","numberString","size","padded","length","newTimer","attrs","timer","uuid","v4","elapsed","findById","array","cb","forEach","el","renderElapsedString","runningSince","totalElapsed","Date","now","Timer","handleDelete","onDelete","handleEditFormOpen","onEditFormOpen","handlePlay","onPlay","handlePause","onPause","renderButton","myInterval","setInterval","forceUpdate","clearInterval","elapsedString","Container","isFormOpen","handleEditFormClose","projet","ListContainer","timers","map","key","renderContainer","Button","handleFormOpen","ActionContainer","handleFormClose","Box","handleEditTimer","handleCreateTimer","filter","console","log","nextElapsed","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02755bd6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n// creer le composant\nclass TimerForm extends Component {\n    state = {\n \n            title: this.props.title || \"\",\n            project: this.props.project || \"\",\n    }\n    handleTitleChange = e => {\n        this.setState({title: e.target.value});\n    }\n    handleProjectChange = e => {\n        this.setState({project: e.target.value});\n    }\n    handleClick = () => {\n        const { title, project } = this.state;\n        if(this.props.id) {\n            //on veut modifier\n            const id= this.props.id;\n            this.props.onFormSubmit({ id, title, project});\n        } else {\n            //on veut créer\n            this.props.onFormSubmit({ title, project });\n        }\n    }\n    render() {\n        const submitText = this.props.title ? \"Modifier\" : \"Créer\"; \n        return (\n            <div className=\"form\">\n                <div className=\"form--content\">\n                    <div className=\"form--item\">\n                        <label>Titre</label>\n                        <input \n                           type=\"text\"\n                           placeholder=\"Mon Titre\"\n                           value={this.state.title}\n                           onChange={this.handleTitleChange}\n                        /> \n                    </div>\n                    <div className=\"form--item\">\n                        <label>Projet</label>\n                        <input \n                           type=\"text\"\n                           placeholder=\"Mon Projet\"\n                           value={this.state.project}\n                           onChange={this.handleProjectChange}\n                        /> \n                    </div>  \n                </div>\n                <div className=\"form--button\">\n                    <button className=\"button btn--submit\" onClick={this.handleClick}>\n                       {submitText}\n                    </button>\n                    <button onClick={this.props.onCloseForm} className=\"button btn--cancel\">\n                        Annuler\n                    </button>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n//exporter le composant\nexport default TimerForm;","import uuid from \"uuid\";\n\nwindow.helpers = (function() {\n  function newTimer(attrs = {}) {\n    const timer = {\n      title: attrs.title || \"Timer\",\n      project: attrs.project || \"Project\",\n      id: uuid.v4(), // eslint-disable-line no-undef\n      elapsed: 0\n    };\n\n    return timer;\n  }\n\n  function findById(array, id, cb) {\n    array.forEach(el => {\n      if (el.id === id) {\n        cb(el);\n        return;\n      }\n    });\n  }\n\n  function renderElapsedString(elapsed, runningSince) {\n    let totalElapsed = elapsed;\n    if (runningSince) {\n      totalElapsed += Date.now() - runningSince;\n      //   console.log(\"totalElapsed\", totalElapsed);\n    }\n    // console.log(\"toHumain\", millisecondsToHuman(totalElapsed));\n    return millisecondsToHuman(totalElapsed);\n  }\n\n  function millisecondsToHuman(ms) {\n    const seconds = Math.floor((ms / 1000) % 60);\n    const minutes = Math.floor((ms / 1000 / 60) % 60);\n    const hours = Math.floor(ms / 1000 / 60 / 60);\n\n    const humanized = [\n      pad(hours.toString(), 2),\n      pad(minutes.toString(), 2),\n      pad(seconds.toString(), 2)\n    ].join(\":\");\n\n    return humanized;\n  }\n\n  function pad(numberString, size) {\n    let padded = numberString;\n    while (padded.length < size) padded = `0${padded}`;\n    return padded;\n  }\n\n  return {\n    millisecondsToHuman,\n    newTimer,\n    findById,\n    renderElapsedString\n  };\n})();\n","import React, { Component } from \"react\";\n\nimport \"../helpers.js\";\n\nclass Timer extends Component {\n  componentDidMount() {\n    this.myInterval = setInterval(() => this.forceUpdate(), 50);\n  }\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n  handleDelete = () => {\n    this.props.onDelete(this.props.id);\n  };\n  handleEditFormOpen = () => {\n    this.props.onEditFormOpen(this.props.id);\n  };\n  handlePlay = () => {\n    this.props.onPlay(this.props.id);\n  }\n  handlePause = () => {\n    this.props.onPause(this.props.id);\n  }\n  renderButton = () => {\n    if (this.props.runningSince) {\n      return (\n        <button className=\"button\" onClick={this.handlePause}>\n          Pause\n        </button>\n      );\n    } else {\n      return (\n        <button className=\"button\" onClick={this.handlePlay}>\n          Play\n        </button>\n      );\n    }\n  };\n  render() {\n    const elapsedString = window.helpers.renderElapsedString(\n      this.props.elapsed,\n      this.props.runningSince\n    );\n    // console.log('runningSince', this.props.runningSince);\n    return (\n      <div className=\"timer--box\">\n        <div className=\"timer--content\">\n          <div className=\"timer--header\">\n            <h2>{this.props.title}</h2>\n          </div>\n          <div className=\"timer--meta\">\n            <p>{this.props.project}</p>\n          </div>\n          <div className=\"timer--h2\">\n            <h4>{elapsedString}</h4>\n          </div>\n          <div className=\"actions\">\n            <span className=\"trash\" onClick={() => {this.props.onDelete(this.props.id)}}>\n              Trash\n            </span>\n            <span className=\"edit\" onClick={this.props.onEditFormOpen}>\n              Edit\n            </span>\n          </div>\n        </div>\n        {this.renderButton()}\n      </div>\n    );\n  }\n}\n\nexport default Timer ;\n\n","import React, { Component } from 'react';\nimport TimerForm from './TimerForm';\nimport Timer from './Timer'\n\n// creer le composant\nclass Container extends Component { \n    state = { \n        isFormOpen: false\n    }\n    handleEditFormOpen = () => {\n        this.setState({ isFormOpen: true});\n    }\n    handleEditFormClose = () => {\n        this.setState({ isFormOpen: false});\n    }\n    onFormSubmit = ({ id, title, projet }) => {\n        this.handleEditFormClose()\n        this.props.onFormSubmit({ id, title, projet });\n    } \n    render() {\n        return (\n            \n                <div className=\"list--container\">\n                    {this.state.isFormOpen ? \n                    (\n                        <TimerForm \n                            title={this.props.title}\n                            project={this.props.project}\n                            id={this.props.id}\n                            onFormSubmit={this.onFormSubmit}\n                            onCloseForm={this.handleEditFormClose}\n                        />\n\n                        ) : \n                        (\n\n                        <Timer\n                            title={this.props.title}\n                            project={this.props.project}\n                            id={this.props.id}\n                            elapsed={this.props.elapsed}\n                            runningSince={this.props.runningSince}\n                            onEditFormOpen={this.handleEditFormOpen}\n                            onDelete={this.props.onDelete}\n                            onPlay={this.props.onPlay}\n                            onPause={this.props.onPause}\n                        /> \n                    )} \n                </div>\n            \n\n        )\n    }\n}\n\n//exporter le composant\nexport default Container;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Container from './Container';\n\n\n// creer le composant\nconst renderContainer = props => {\n    \n        return props.timers.map((timer =>{\n          return (\n          <Container \n                onFormSubmit={props.onFormSubmit}\n                onDelete= {props.onDelete}\n                key={timer.id}\n                onPlay={props.onPlay}\n                onPause={props.onPause} \n                {...timer} \n                />\n              )\n        }))\n    }\n    const ListContainer = (props) => {\n        return (\n            \n                <div className=\"list--container\">\n                     {renderContainer(props)}\n                    \n                </div>\n            \n\n        )\n    }\nListContainer.propTypes = {\n    onFormSubmit: PropTypes.func.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    timers: PropTypes.array.isRequired,\n    onPlay: PropTypes.func.isRequired,\n    onPause: PropTypes.func.isRequired,\n}\n\n//exporter le composant\nexport default ListContainer;","import React, { Component } from 'react';\n\n// creer le composant\nclass Button extends Component {\n    render() {\n        return (\n            \n                <button onClick={this.props.handleFormOpen} className=\"button__outline\">\n                    +\n                </button>\n            \n\n        )\n    }\n}\n\n//exporter le composant\nexport default Button;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport TimerForm from './TimerForm';\nimport Button from './Button';\n\n\n\n// creer le composant\nclass ActionContainer extends Component {\n    static propTypes = {\n        onFormSubmit: PropTypes.func.isRequired\n    }\n    state = {\n        isFormOpen: false\n    }\n    handleFormOpen = () => {\n        this.setState({ isFormOpen: true});\n    }\n    handleFormClose = () => {\n        this.setState({ isFormOpen: false});\n    }\n    onFormSubmit = ({ title, projet }) => {\n        this.handleFormClose()\n        this.props.onFormSubmit({ title, projet });\n    } \n    render() {\n        if(this.state.isFormOpen) {\n            return (\n            <TimerForm \n                 onFormSubmit={this.onFormSubmit} \n                 onCloseForm={this.handleFormClose}\n              />\n            )\n        } else {\n            return <Button handleFormOpen={this.handleFormOpen}/>\n        }\n    }\n} \n\n//exporter le composant\nexport default ActionContainer;","import React, { Component } from \"react\";\nimport uuid from 'uuid';\nimport  ListContainer  from \"./ListContainer\";\nimport  ActionContainer  from \"./ActionContainer\";\n\n\n\nclass Box extends Component {\n  state = {\n    timers: [\n      {\n        title: \"Apprendre React\",\n        projet: \"Développement Web\",\n        elapsed: 5609620,\n        id: \"0a4a79cb-b06d-4cb1-883d-549a1e3b66d7\",\n        runningSince: null\n      },\n      {\n        title: \"Apprendre Angular\",\n        project: \"Développement Web\",\n        elapsed: 1349620,\n        id: \"0a4a79cb-b06d-4cb1-883d-549a1e3b66d4\",\n        runningSince: null\n      }\n    ]\n  };\n  handleEditTimer = ({ id, title, project}) => {\n    this.setState({\n      timers: this.state.timers.map(timer => {\n        if (timer.id === id) {\n          return {\n            ...timer,\n            title,\n            project\n          };\n        }\n        return { ...timer };\n      })\n    });\n  }\n  handleCreateTimer = ({ title, project }) => {\n    const timer = {\n      title,\n      project,\n      id: uuid.v4(),\n      elapsed: 0,\n      runningSince: null\n    };\n    this.setState({ \n        timers: [...this.state.timers, timer] });\n  };\n  handleEditFormOpen = ({ id, title, project }) => {\n    this.setState({\n      timers: this.state.timers.map(timer => {\n        if (timer.id === id) {\n          return {\n            ...timer,\n            title,\n            project\n          };\n        }\n        return { ...timer };\n      })\n    });\n  };\n  handleDelete = id => {\n    this.setState({\n      timers: this.state.timers.filter(timer => timer.id !== id)\n    }); \n    }\n\n  handlePause = id => {\n    console.log('pause');\n    const now = Date.now();\n    this.setState({\n      timers: this.state.timers.map(timer => {\n        if(id === timer.id) {\n          const nextElapsed = now - timer.runningSince;\n          return {\n            ...timer,\n            runningSince: null,\n            elapsed: timer.elapsed + nextElapsed\n          }\n        } else {\n          return { ...timer };\n        }\n      })\n    });\n  };\n  handlePlay = id => {\n    console.log('play');\n    const now = Date.now();\n    this.setState({\n      timers: this.state.timers.map(timer => {\n        if(id === timer.id) {\n          return {\n            ...timer,\n            runningSince: now\n          }\n        } else {\n          return { ...timer };\n        }\n      })\n    });\n  };\n  render() {\n    return (\n      <div className=\"boxed--view\">\n        <div className=\"boxed--view__box\">\n          <ListContainer\n            timers={this.state.timers}\n            onFormSubmit={this.handleEditTimer}\n            onDelete={this.handleDelete}\n            onPause={this.handlePause}\n            onPlay={this.handlePlay}\n          />\n          <ActionContainer onFormSubmit={this.handleCreateTimer} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Box ;\n","import React, { Component } from 'react';\nimport Box from './components/Box';\nimport './App.css'\n\nclass App extends Component {\n  render() {\n    return(\n      <div className=\"App\">\n        <Box />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}